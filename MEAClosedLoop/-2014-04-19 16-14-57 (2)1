Comparing files CLoopController.cs and C:\USERS\WIN7..64..ENG\DESKTOP\NBICS_MEA_CLOSED_LOOP\MEACLOSEDLOOP\CLOOPCONTROLLER.CS
***** CLoopController.cs


    public delegate void PackConsumerDelegate(CPack pack);
    private List<PackConsumerDelegate> m_packConsumerList = null;
    private object m_packConsumerListLock = new object();

    public void AddDataConsumer(PackConsumerDelegate consumer)
    {
      if (m_packConsumerList == null) m_packConsumerList = new List<PackConsumerDelegate>();
      lock (m_packConsumerListLock)
      {
        if (m_packConsumerList.Contains(consumer)) return;
        m_packConsumerList.Add(consumer);
      }
    }
    public void RemoveDataConsumer(PackConsumerDelegate consumer)
    {
      lock (m_packConsumerListLock) m_packConsumerList.Remove(consumer);
      return;
    }
***** C:\USERS\WIN7..64..ENG\DESKTOP\NBICS_MEA_CLOSED_LOOP\MEACLOSEDLOOP\CLOOPCONTROLLER.CS

    public CLoopController(CInputStream inputStream, CFiltering filter, CStimulator stimulator)
    {
      if (inputStream == null) throw new ArgumentNullException("inputStream");
      if (filter == null) throw new ArgumentNullException("filter");
      if (stimulator == null) throw new ArgumentNullException("stimulator");

      m_inputStream = inputStream;
      m_stimulator = stimulator;
      m_filter = filter;

      m_stimulator.DownloadDefaultShape(1, 1, 1, 10000);
      m_stimulus = m_stimulator.GetStimulus();
      m_packDetector = new CPackDetector(m_filter);

      m_stimTimer = new System.Timers.Timer();
      m_stimTimer.Elapsed += StimTimer;

      m_t = new Thread(FeedBackLoop);
      m_t.Start();
    }
*****

***** CLoopController.cs

    public CLoopController(CInputStream inputStream, CFiltering filter, CStimulator stimulator)
    {
      if (inputStream == null) throw new ArgumentNullException("inputStream");
      if (filter == null) throw new ArgumentNullException("filter");
      if (stimulator == null) throw new ArgumentNullException("stimulator");

      m_inputStream = inputStream;
      m_stimulator = stimulator;
      m_filter = filter;

      m_stimulus = m_stimulator.GetStimulus();
      m_packDetector = new CPackDetector(m_filter);

      m_stimTimer = new System.Timers.Timer();
      m_stimTimer.Elapsed += StimTimer;

      m_t = new Thread(FeedBackLoop);
      m_t.Start();
    }
***** C:\USERS\WIN7..64..ENG\DESKTOP\NBICS_MEA_CLOSED_LOOP\MEACLOSEDLOOP\CLOOPCONTROLLER.CS

    public void Stop()
    {
      m_stop = true;
    }
*****

***** CLoopController.cs

    public void Stop()
    {
      m_stop = true;
    }

    private void FeedBackLoop()
***** C:\USERS\WIN7..64..ENG\DESKTOP\NBICS_MEA_CLOSED_LOOP\MEACLOSEDLOOP\CLOOPCONTROLLER.CS

    private void FeedBackLoop()
*****

***** CLoopController.cs
        prevPack = currPack;
        // Нагажу комментами на русском ;)
        // Раздача законченных пачек подписчикам

        lock (m_packConsumerListLock)
        {
          if (m_packConsumerList != null && m_packConsumerList.Count != 0)
          {
            foreach (PackConsumerDelegate consumer in m_packConsumerList) consumer(currPack);
          }
        }
      }
***** C:\USERS\WIN7..64..ENG\DESKTOP\NBICS_MEA_CLOSED_LOOP\MEACLOSEDLOOP\CLOOPCONTROLLER.CS
        prevPack = currPack;

      }
*****

***** CLoopController.cs
    {
      //[DEBUG] m_stimulator.Start();
    }
***** C:\USERS\WIN7..64..ENG\DESKTOP\NBICS_MEA_CLOSED_LOOP\MEACLOSEDLOOP\CLOOPCONTROLLER.CS
    {
      //[DEBUG] 
        m_stimulator.Start();
    }
*****

